From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: KurumiFake <kurumiisshidowife@gmail.com>
Date: Sun, 12 Jun 2022 01:50:04 +0200
Subject: [PATCH] configurable logging of some stuff

- we are behind a proxy
- teleport commands likes to throw a lot of message
- expired chat stuff is spammy asf for no reason

diff --git a/src/main/java/com/shinamc/starlivht/StarlivhtConfig.java b/src/main/java/com/shinamc/starlivht/StarlivhtConfig.java
index 7344d11c0789b91c4d96ed8c3679f5df17755f6c..dea8b3aa70cd290ce556ac739fbb0eb1ee0dd6f2 100644
--- a/src/main/java/com/shinamc/starlivht/StarlivhtConfig.java
+++ b/src/main/java/com/shinamc/starlivht/StarlivhtConfig.java
@@ -178,4 +178,19 @@ public class StarlivhtConfig {
         criterionTriggerLocation = getBoolean("criterion-trigger.location", criterionTriggerLocation);
     }
 
+    public static boolean logExtraOfflineMode = true;
+    public static boolean logMovedQuickly = true;
+    public static boolean logMovedWrongly = true;
+    public static boolean logVehicleMovedQuickly = true;
+    public static boolean logVehicleMovedWrongly = true;
+    public static boolean logExpiredChat = true;
+    private static void logs() {
+        logExtraOfflineMode = getBoolean("log.extra-offline-mode-info", logExtraOfflineMode);
+        logMovedQuickly = getBoolean("log.moved-quickly", logMovedQuickly);
+        logMovedWrongly = getBoolean("log.moved-wrongly", logMovedWrongly);
+        logVehicleMovedQuickly = getBoolean("log.vehicle-moved-quickly", logVehicleMovedQuickly);
+        logVehicleMovedWrongly = getBoolean("log.vehicle-moved-wrongly", logVehicleMovedWrongly);
+        logExpiredChat = getBoolean("log.expired-chat", logExpiredChat);
+    }
+
 }
diff --git a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
index 5d50c3da5990539a5d1bd5b62180f780aef55b4b..6e1412e28733a2ba8870f31c019af1583fc2d14b 100644
--- a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
+++ b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
@@ -293,16 +293,18 @@ public class DedicatedServer extends MinecraftServer implements ServerInterface
 
         if (!this.usesAuthentication()) {
             DedicatedServer.LOGGER.warn("**** SERVER IS RUNNING IN OFFLINE/INSECURE MODE!");
-            DedicatedServer.LOGGER.warn("The server will make no attempt to authenticate usernames. Beware.");
-            // Spigot start
-            if (org.spigotmc.SpigotConfig.bungee) {
-                DedicatedServer.LOGGER.warn("Whilst this makes it possible to use BungeeCord, unless access to your server is properly restricted, it also opens up the ability for hackers to connect with any username they choose.");
-                DedicatedServer.LOGGER.warn("Please see http://www.spigotmc.org/wiki/firewall-guide/ for further information.");
-            } else {
-                DedicatedServer.LOGGER.warn("While this makes the game possible to play without internet access, it also opens up the ability for hackers to connect with any username they choose.");
-            }
-            // Spigot end
-            DedicatedServer.LOGGER.warn("To change this, set \"online-mode\" to \"true\" in the server.properties file.");
+            if (com.shinamc.starlivht.StarlivhtConfig.logExtraOfflineMode) { // Starlivht
+                DedicatedServer.LOGGER.warn("The server will make no attempt to authenticate usernames. Beware.");
+                // Spigot start
+                if (org.spigotmc.SpigotConfig.bungee) {
+                    DedicatedServer.LOGGER.warn("Whilst this makes it possible to use BungeeCord, unless access to your server is properly restricted, it also opens up the ability for hackers to connect with any username they choose.");
+                    DedicatedServer.LOGGER.warn("Please see http://www.spigotmc.org/wiki/firewall-guide/ for further information.");
+                } else {
+                    DedicatedServer.LOGGER.warn("While this makes the game possible to play without internet access, it also opens up the ability for hackers to connect with any username they choose.");
+                }
+                // Spigot end
+                DedicatedServer.LOGGER.warn("To change this, set \"online-mode\" to \"true\" in the server.properties file.");
+            } // Starlivht
         }
 
 
diff --git a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
index 05cd95494b3c368eb4d13d7335c662485fd27904..5d5777bdeeaa88836560225656ea1a0fa66c6b57 100644
--- a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
+++ b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
@@ -615,6 +615,7 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Ser
 
                 if (d10 - d9 > Math.max(100.0D, Math.pow((double) (org.spigotmc.SpigotConfig.movedTooQuicklyMultiplier * (float) i * speed), 2)) && !this.isSingleplayerOwner()) {
                 // CraftBukkit end
+                    if (com.shinamc.starlivht.StarlivhtConfig.logVehicleMovedQuickly) // Starlivht
                     ServerGamePacketListenerImpl.LOGGER.warn("{} (vehicle of {}) moved too quickly! {},{},{}", new Object[]{entity.getName().getString(), this.player.getName().getString(), d6, d7, d8});
                     this.connection.send(new ClientboundMoveVehiclePacket(entity));
                     return;
@@ -643,6 +644,7 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Ser
 
                 if (d10 > org.spigotmc.SpigotConfig.movedWronglyThreshold) { // Spigot
                     flag2 = true; // Paper - diff on change, this should be moved wrongly
+                    if (com.shinamc.starlivht.StarlivhtConfig.logVehicleMovedWrongly) // Starlivht
                     ServerGamePacketListenerImpl.LOGGER.warn("{} (vehicle of {}) moved wrongly! {}", new Object[]{entity.getName().getString(), this.player.getName().getString(), Math.sqrt(d10)});
                 }
                 Location curPos = this.getCraftPlayer().getLocation(); // Spigot
@@ -1411,6 +1413,7 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Ser
 
                                 if (d11 - d10 > Math.max(f2, Math.pow((double) (org.spigotmc.SpigotConfig.movedTooQuicklyMultiplier * (float) i * speed), 2)) && !this.isSingleplayerOwner()) {
                                 // CraftBukkit end
+                                    if (com.shinamc.starlivht.StarlivhtConfig.logMovedQuickly) // Starlivht
                                     ServerGamePacketListenerImpl.LOGGER.warn("{} moved too quickly! {},{},{}", new Object[]{this.player.getName().getString(), d7, d8, d9});
                                     this.teleport(this.player.getX(), this.player.getY(), this.player.getZ(), this.player.getYRot(), this.player.getXRot());
                                     return;
@@ -1479,6 +1482,7 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Ser
 
                             if (!this.player.isChangingDimension() && d11 > org.spigotmc.SpigotConfig.movedWronglyThreshold && !this.player.isSleeping() && !this.player.gameMode.isCreative() && this.player.gameMode.getGameModeForPlayer() != GameType.SPECTATOR) { // Spigot
                                 flag2 = true; // Paper - diff on change, this should be moved wrongly
+                                if (com.shinamc.starlivht.StarlivhtConfig.logMovedWrongly) // Starlivht
                                 ServerGamePacketListenerImpl.LOGGER.warn("{} moved wrongly!", this.player.getName().getString());
                             }
 
@@ -2167,6 +2171,7 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Ser
             return false;
         } else {
             if (this.isChatExpired(instant)) {
+                if (com.shinamc.starlivht.StarlivhtConfig.logExpiredChat) // Starlivht
                 ServerGamePacketListenerImpl.LOGGER.warn("{} sent expired chat: '{}'. Is the client/server system time unsynchronized?", this.player.getName().getString(), s);
             }
 
