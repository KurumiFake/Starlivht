From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: KurumiFake <kurumiisshidowife@gmail.com>
Date: Sun, 12 Jun 2022 01:50:04 +0200
Subject: [PATCH] configurable logging of some stuff

- we are behind a proxy
- teleport commands likes to throw a lot of message

diff --git a/src/main/java/com/shinamc/starlivht/StarlivhtConfig.java b/src/main/java/com/shinamc/starlivht/StarlivhtConfig.java
index 7344d11c0789b91c4d96ed8c3679f5df17755f6c..14e30b5d9271a58bcd7776e07d9dfff8ee814616 100644
--- a/src/main/java/com/shinamc/starlivht/StarlivhtConfig.java
+++ b/src/main/java/com/shinamc/starlivht/StarlivhtConfig.java
@@ -178,4 +178,17 @@ public class StarlivhtConfig {
         criterionTriggerLocation = getBoolean("criterion-trigger.location", criterionTriggerLocation);
     }
 
+    public static boolean logExtraOfflineMode = true;
+    public static boolean logMovedQuickly = true;
+    public static boolean logMovedWrongly = true;
+    public static boolean logVehicleMovedQuickly = true;
+    public static boolean logVehicleMovedWrongly = true;
+    private static void logs() {
+        logExtraOfflineMode = getBoolean("log.extra-offline-mode-info", logExtraOfflineMode);
+        logMovedQuickly = getBoolean("log.moved-quickly", logMovedQuickly);
+        logMovedWrongly = getBoolean("log.moved-wrongly", logMovedWrongly);
+        logVehicleMovedQuickly = getBoolean("log.vehicle-moved-quickly", logVehicleMovedQuickly);
+        logVehicleMovedWrongly = getBoolean("log.vehicle-moved-wrongly", logVehicleMovedWrongly);
+    }
+
 }
diff --git a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
index 44ced718203f57ae2c28ef96fb31e65c1b973ddf..5e7b0349ed122220a562ecf639a1b9083d32a185 100644
--- a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
+++ b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
@@ -293,16 +293,18 @@ public class DedicatedServer extends MinecraftServer implements ServerInterface
 
         if (!this.usesAuthentication()) {
             DedicatedServer.LOGGER.warn("**** SERVER IS RUNNING IN OFFLINE/INSECURE MODE!");
-            DedicatedServer.LOGGER.warn("The server will make no attempt to authenticate usernames. Beware.");
-            // Spigot start
-            if (org.spigotmc.SpigotConfig.bungee) {
-                DedicatedServer.LOGGER.warn("Whilst this makes it possible to use BungeeCord, unless access to your server is properly restricted, it also opens up the ability for hackers to connect with any username they choose.");
-                DedicatedServer.LOGGER.warn("Please see http://www.spigotmc.org/wiki/firewall-guide/ for further information.");
-            } else {
-                DedicatedServer.LOGGER.warn("While this makes the game possible to play without internet access, it also opens up the ability for hackers to connect with any username they choose.");
-            }
-            // Spigot end
-            DedicatedServer.LOGGER.warn("To change this, set \"online-mode\" to \"true\" in the server.properties file.");
+            if (com.shinamc.starlivht.StarlivhtConfig.logExtraOfflineMode) { // Starlivht
+                DedicatedServer.LOGGER.warn("The server will make no attempt to authenticate usernames. Beware.");
+                // Spigot start
+                if (org.spigotmc.SpigotConfig.bungee) {
+                    DedicatedServer.LOGGER.warn("Whilst this makes it possible to use BungeeCord, unless access to your server is properly restricted, it also opens up the ability for hackers to connect with any username they choose.");
+                    DedicatedServer.LOGGER.warn("Please see http://www.spigotmc.org/wiki/firewall-guide/ for further information.");
+                } else {
+                    DedicatedServer.LOGGER.warn("While this makes the game possible to play without internet access, it also opens up the ability for hackers to connect with any username they choose.");
+                }
+                // Spigot end
+                DedicatedServer.LOGGER.warn("To change this, set \"online-mode\" to \"true\" in the server.properties file.");
+            } // Starlivht
         }
 
 
diff --git a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
index 05cd95494b3c368eb4d13d7335c662485fd27904..6cd9248f1718bc5ae00932adde6f95732f8241bb 100644
--- a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
+++ b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
@@ -615,6 +615,7 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Ser
 
                 if (d10 - d9 > Math.max(100.0D, Math.pow((double) (org.spigotmc.SpigotConfig.movedTooQuicklyMultiplier * (float) i * speed), 2)) && !this.isSingleplayerOwner()) {
                 // CraftBukkit end
+                    if (com.shinamc.starlivht.StarlivhtConfig.logVehicleMovedQuickly) // Starlivht
                     ServerGamePacketListenerImpl.LOGGER.warn("{} (vehicle of {}) moved too quickly! {},{},{}", new Object[]{entity.getName().getString(), this.player.getName().getString(), d6, d7, d8});
                     this.connection.send(new ClientboundMoveVehiclePacket(entity));
                     return;
@@ -643,6 +644,7 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Ser
 
                 if (d10 > org.spigotmc.SpigotConfig.movedWronglyThreshold) { // Spigot
                     flag2 = true; // Paper - diff on change, this should be moved wrongly
+                    if (com.shinamc.starlivht.StarlivhtConfig.logVehicleMovedWrongly) // Starlivht
                     ServerGamePacketListenerImpl.LOGGER.warn("{} (vehicle of {}) moved wrongly! {}", new Object[]{entity.getName().getString(), this.player.getName().getString(), Math.sqrt(d10)});
                 }
                 Location curPos = this.getCraftPlayer().getLocation(); // Spigot
@@ -1411,6 +1413,7 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Ser
 
                                 if (d11 - d10 > Math.max(f2, Math.pow((double) (org.spigotmc.SpigotConfig.movedTooQuicklyMultiplier * (float) i * speed), 2)) && !this.isSingleplayerOwner()) {
                                 // CraftBukkit end
+                                    if (com.shinamc.starlivht.StarlivhtConfig.logMovedQuickly) // Starlivht
                                     ServerGamePacketListenerImpl.LOGGER.warn("{} moved too quickly! {},{},{}", new Object[]{this.player.getName().getString(), d7, d8, d9});
                                     this.teleport(this.player.getX(), this.player.getY(), this.player.getZ(), this.player.getYRot(), this.player.getXRot());
                                     return;
@@ -1479,6 +1482,7 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Ser
 
                             if (!this.player.isChangingDimension() && d11 > org.spigotmc.SpigotConfig.movedWronglyThreshold && !this.player.isSleeping() && !this.player.gameMode.isCreative() && this.player.gameMode.getGameModeForPlayer() != GameType.SPECTATOR) { // Spigot
                                 flag2 = true; // Paper - diff on change, this should be moved wrongly
+                                if (com.shinamc.starlivht.StarlivhtConfig.logMovedWrongly) // Starlivht
                                 ServerGamePacketListenerImpl.LOGGER.warn("{} moved wrongly!", this.player.getName().getString());
                             }
 
